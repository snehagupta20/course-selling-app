import express from 'express';
import zod from 'zod';
import auth from '../../middleware.js';
import { Seller } from '../model/seller.model.js';
import { Course } from '../model/course.model.js';

const router = express.Router();

const courseBody = zod.object({
    title : zod.string(),
    description : zod.string().optional(),
    thumbnail : zod.string().url({message : "Please enter the valid image URL."}).optional(),
    cost : zod.number(),
    hours : zod.number(),
    tags : zod.array(zod.string()),
    courseId : zod.string().optional(),
});

router.post('/addCourse', auth, async (req, res) => {
    const body = req.body;
    
    // check if user's email id exists in seller's db
    const userExists = await Seller.findOne(
        {emailId : req.emailId}
    );
    if(!userExists){
        return res.status(411).json({
            message : "User is not Authorised to add the courses."
        });
    };

    // check if all inputs are valid or not
    const {success, error} = courseBody.safeParse(body);
    if(!success){
        return res.status(411).json({
            message : "Please enter the valid inputs.",
            error : error,
        });
    };

    // generating course id
    const courseId = (req.emailId.split("@")[0]) + ((Math.random()*100));
    console.log("course ID generated by code = ",courseId);

    console.log("tags = ", body.tags);

    // add course
    const course = await Course.create({
        title : body.title,
        description : body.description,
        thumbnail : body.thumbnail,
        cost : body.cost,
        hours : body.hours,
        tags : body.tags,
        courseId : courseId,
    });

    return res.status(200).json({
        message : "Course created successfully!!",
        courseId : courseId,
    });

});

const courseRouter = router;
export default courseRouter;